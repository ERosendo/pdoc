name: CI
on:
  push:
    branches:
      - "**"
  pull_request:
    branches:
      - "main"

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11", "3.12"]
        include:
          - python-version: 3.9
            test-type: lint
          - python-version: 3.9
            test-type: docs

    steps:
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - uses: actions/cache@v2
        name: Set up caches
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-py${{ matrix.python-version }}

      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 3

      - name: Install dependencies
        run: |
          pip install -U pip setuptools wheel
          pip install -U .

      - name: Install lint dependencies
        if: matrix.test-type == 'lint'
        run: |
          pip install flake8 coverage mypy types-Markdown
          sudo apt update && sudo apt-get install \
            texlive-xetex lmodern texlive-fonts-recommended  # test_pdf_pandoc
          wget -O/tmp/pandoc.deb https://github.com/jgm/pandoc/releases/download/2.10/pandoc-2.10-1-amd64.deb && sudo dpkg -i /tmp/pandoc.deb

      - name: Install docs dependencies
        if: matrix.test-type == 'docs'
        run: pip install -e .

      - name: Test w/ Coverage, Lint
        if: matrix.test-type == 'lint'
        run: |
          find -name '*.md' | xargs .github/lint-markdown.sh
          flake8
          mypy -p pdoc
          time coverage run -m unittest -v pdoc.test
          PDOC_TEST_PANDOC=1 time catchsegv python -m unittest -v pdoc.test.CliTest.test_pdf_pandoc
          bash <(curl -s https://codecov.io/bash)

      - name: Test
        if: '! matrix.test-type'
        run: time python -m unittest -v pdoc.test

      - name: Test docs
        if: matrix.test-type == 'docs'
        run: time doc/build.sh
